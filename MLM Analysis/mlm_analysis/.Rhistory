l2_type_cage1 <- lmer(daily_avg ~ 1 + day + type + day:type + cage2 + cage1 + cage4 + cage5 + cage6 + cage7 + cage8 + cage9 + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage1)
l2_type_cage1 <- lmer(daily_avg ~ 1 + day + type + day:type + cage1 + cage2 + cage3 + cage4 + cage5 + cage6 + cage7 + cage8 + cage9 + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage1)
l2_type_cage1 <- lmer(daily_avg ~ 1 + day + type + day:type + cage1 + cage2 + cage3 + cage1 + cage5 + cage6 + cage7 + cage8 + cage9 + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage1)
l2_type_cage1 <- lmer(daily_avg ~ 1 + day + type + day:type + cage1 + cage2 + cage3 + cage4 + cage1 + cage6 + cage7 + cage8 + cage9 + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage1)
l2_type_cage1 <- lmer(daily_avg ~ 1 + day + type + day:type + cage2 + cage3 + cage4 + cage5 + cage6 + cage7 + cage8 + cage9 + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage1)
# LIBRARIES
library(dplyr)
library(ggplot2)
library(readxl)
library(lme4)
library(lmtest)
library(performance)
library(lmerTest)
library(optimx)
library(RColorBrewer)
# DATA
data_daily_avg_ht <- read_excel("data/data_daily_avg_ht.xlsx", sheet = "long")
# MULTI-LEVEL MODEL OF DAILY AVERAGE HOLD TIME
# Step 1: random-intercept-only/null model
null_model_id <- lmer(daily_avg ~ 1 + (1|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_id)
performance::icc(null_model_id)
#Step 1a: test if the model is cross-classified by day
null_model_day <- lmer(daily_avg ~ 1 + (1|day), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
# DATA
data_daily_avg_ht <- read_excel("data/data_daily_avg_ht.xlsx", sheet = "long")
# MULTI-LEVEL MODEL OF DAILY AVERAGE HOLD TIME
# Step 1: random-intercept-only/null model
null_model_id <- lmer(daily_avg ~ 1 + (1|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_id)
performance::icc(null_model_id)
#Step 1a: test if the model is cross-classified by day
null_model_day <- lmer(daily_avg ~ 1 + (1|day), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_day)
performance::icc(null_model_day)
#Step 1b: test ICC of mouse genotype
null_model_type <- lmer(daily_avg ~ 1 + (1|type), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_type)
performance::icc(null_model_type)
#Step 1c: test ICC of cage number
null_model_cage <- lmer(daily_avg ~ 1 + (1|cage1), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_cage)
performance::icc(null_model_cage)
#Step 1c: test ICC of cage number
null_model_cage <- lmer(daily_avg ~ 1 + (1|cage2), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_cage)
performance::icc(null_model_cage)
#Step 1c: test ICC of cage number
null_model_cage <- lmer(daily_avg ~ 1 + (1|cage3), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_cage)
performance::icc(null_model_cage)
#Step 1c: test ICC of cage number
null_model_cage <- lmer(daily_avg ~ 1 + (1|cage4), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_cage)
performance::icc(null_model_cage)
#Step 1c: test ICC of cage number
null_model_cage <- lmer(daily_avg ~ 1 + (1|cage5), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_cage)
performance::icc(null_model_cage)
#Step 1c: test ICC of cage number
null_model_cage <- lmer(daily_avg ~ 1 + (1|cage6), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_cage)
performance::icc(null_model_cage)
#Step 1c: test ICC of cage number
null_model_cage <- lmer(daily_avg ~ 1 + (1|cage), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
# LIBRARIES
library(dplyr)
library(ggplot2)
library(readxl)
library(lme4)
library(lmtest)
library(performance)
library(lmerTest)
library(optimx)
library(RColorBrewer)
# DATA
data_daily_avg_ht <- read_excel("data/data_daily_avg_ht.xlsx", sheet = "long")
# MULTI-LEVEL MODEL OF DAILY AVERAGE HOLD TIME
# Step 1: random-intercept-only/null model
null_model_id <- lmer(daily_avg ~ 1 + (1|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_id)
performance::icc(null_model_id)
#Step 1a: test if the model is cross-classified by day
null_model_day <- lmer(daily_avg ~ 1 + (1|day), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_day)
performance::icc(null_model_day)
#Step 1b: test ICC of mouse genotype
null_model_type <- lmer(daily_avg ~ 1 + (1|type), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_type)
performance::icc(null_model_type)
#Step 1c: test ICC of cage number
null_model_cage <- lmer(daily_avg ~ 1 + (1|cage), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_cage)
performance::icc(null_model_cage)
#Step 1c: test ICC of number of mice per cage
null_model_density <- lmer(daily_avg ~ 1 + (1|cage_density), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_density)
performance::icc(null_model_density)
# Step 2: build model
# 2a: Adding Level1 fixed and random effects
# Level 1 predictor: day
l1_model <- lmer(daily_avg ~ 1 + day + (day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l1_model)
as.matrix(Matrix::bdiag(VarCorr(l1_model)))
# 2b: Evidence for retaining effects
l1_model_no_U1j <-  lmer(daily_avg ~ 1 + day + (1|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
anova(l1_model, l1_model_no_U1j)
confint(l1_model, oldNames = F)
l1_model_cov0 <- lmer(daily_avg ~ 1 + day + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
anova(l1_model, l1_model_cov0)
confint(l1_model_cov0, oldNames = F)
as_tibble(coef(l1_model)$mouse_id) %>%
ggplot(mapping = aes(x = day)) +
geom_histogram(bins = 5)
# 2c: Adding Level-2 fixed effects
l2_type <- lmer(daily_avg ~ 1 + day + type + day:type + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type)
anova(l2_type,l1_model_cov0)
l2_type_cage1 <- lmer(daily_avg ~ 1 + day + type + day:type + cage2 + cage3 + cage4 + cage5 + cage6 + cage7 + cage8 + cage9 + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage1)
confint(l2_type_cage1, oldNames = F)
anova(l2_type_cage1,l2_type)
Matrix::bdiag(VarCorr(l2_type_cage1))
l2_type_cage2 <- lmer(daily_avg ~ 1 + day + type + day:type + cage1 + cage3 + cage4 + cage5 + cage6 + cage7 + cage8 + cage9 + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage2)
confint(l2_type_cage2, oldNames = F)
anova(l2_type_cage2,l2_type)
Matrix::bdiag(VarCorr(l2_type_cage2))
l2_type_cage3 <- lmer(daily_avg ~ 1 + day + type + day:type + cage1 + cage2 + cage4 + cage5 + cage6 + cage7 + cage8 + cage9 + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage3)
l2_type_cage4 <- lmer(daily_avg ~ 1 + day + type + day:type + cage1 + cage2 + cage3 + cage5 + cage6 + cage7 + cage8 + cage9 + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage4)
l2_type_cage5 <- lmer(daily_avg ~ 1 + day + type + day:type + cage1 + cage2 + cage3 + cage4 + cage6 + cage7 + cage8 + cage9 + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage5)
l2_type_cage6 <- lmer(daily_avg ~ 1 + day + type + day:type + cage1 + cage2 + cage3 + cage4 + cage5 + cage7 + cage8 + cage9 + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage6)
l2_type_cage7 <- lmer(daily_avg ~ 1 + day + type + day:type + cage1 + cage2 + cage3 + cage4 + cage5 + cage6 + cage8 + cage9 + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage7)
l2_type_cage8 <- lmer(daily_avg ~ 1 + day + type + day:type + cage1 + cage2 + cage3 + cage4 + cage5 + cage6 + cage7 + cage9 + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage8)
l2_type_cage9 <- lmer(daily_avg ~ 1 + day + type + day:type + cage1 + cage2 + cage3 + cage4 + cage5 + cage6 + cage7 + cage8 + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage9)
# LIBRARIES
library(dplyr)
library(ggplot2)
library(readxl)
library(lme4)
library(lmtest)
library(performance)
library(lmerTest)
library(optimx)
library(RColorBrewer)
# DATA
data_daily_avg_ht <- read_excel("data/data_daily_avg_ht.xlsx", sheet = "long")
# MULTI-LEVEL MODEL OF DAILY AVERAGE HOLD TIME
# Step 1: random-intercept-only/null model
null_model_id <- lmer(daily_avg ~ 1 + (1|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_id)
performance::icc(null_model_id)
#Step 1a: test if the model is cross-classified by day
null_model_day <- lmer(daily_avg ~ 1 + (1|day), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_day)
performance::icc(null_model_day)
#Step 1b: test ICC of mouse genotype
null_model_type <- lmer(daily_avg ~ 1 + (1|type), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_type)
performance::icc(null_model_type)
#Step 1c: test ICC of cage number
null_model_cage <- lmer(daily_avg ~ 1 + (1|cage), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_cage)
performance::icc(null_model_cage)
#Step 1c: test ICC of number of mice per cage
null_model_density <- lmer(daily_avg ~ 1 + (1|cage_density), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_density)
performance::icc(null_model_density)
# Step 2: build model
# 2a: Adding Level1 fixed and random effects
# Level 1 predictor: day
l1_model <- lmer(daily_avg ~ 1 + day + (day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l1_model)
as.matrix(Matrix::bdiag(VarCorr(l1_model)))
# 2b: Evidence for retaining effects
l1_model_no_U1j <-  lmer(daily_avg ~ 1 + day + (1|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
anova(l1_model, l1_model_no_U1j)
confint(l1_model, oldNames = F)
l1_model_cov0 <- lmer(daily_avg ~ 1 + day + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
anova(l1_model, l1_model_cov0)
confint(l1_model_cov0, oldNames = F)
as_tibble(coef(l1_model)$mouse_id) %>%
ggplot(mapping = aes(x = day)) +
geom_histogram(bins = 5)
# 2c: Adding Level-2 fixed effects
l2_type <- lmer(daily_avg ~ 1 + day + type + day:type + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type)
anova(l2_type,l1_model_cov0)
# 2d: Adding Level-3 fixed effects
l2_type_cage1 <- lmer(daily_avg ~ 1 + day + type + day:type + cage2 + cage3 + cage4 + cage5 + cage6 + cage7 + cage8 + cage9 + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage1)
confint(l2_type_cage1, oldNames = F)
anova(l2_type_cage1,l2_type)
Matrix::bdiag(VarCorr(l2_type_cage1))
# 2d: Adding Level-3 fixed effects
l2_type_cage <- lmer(daily_avg ~ 1 + day + type + day:type + cage + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage)
# 2d: Adding Level-3 fixed effects
l2_type_cage <- lmer(daily_avg ~ 1 + day + type + day:type + cage + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage)
Matrix::bdiag(VarCorr(l2_type_cage1))
l2_type_caget <- lmer(daily_avg ~ 1 + day + type + day:type + cage1 + cage2 + cage3 + cage4 + cage5 + cage6 + cage7 + cage8 + cage9 + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
set.seed(1,2,3)
set.seed(1)
# 2d: Adding Level-3 fixed effects
l2_type_cage <- lmer(daily_avg ~ 1 + day + type + day:type + cage + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage)
set.seed(2)
# 2d: Adding Level-3 fixed effects
l2_type_cage <- lmer(daily_avg ~ 1 + day + type + day:type + cage + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage)
data_daily_avg_ht %>%
group_by(day, type) %>% # group by timepoint and mouse type
mutate(daht_mean = mean(daily_avg)) %>%
ggplot(mapping = aes(x = day, y = daht_mean, colour = factor(type))) +
geom_line() +
labs(title = "DAHT Over Time, Wild Type vs. Q175",
colour = "Mouse Genotype") +
xlab("Time (days)") +
ylab("Daily Average Hold Time (s)") +
ylim(0,1) +
theme_classic() +
theme(panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA)) +
theme(axis.text.x = element_text(color="black",
size=11),
axis.text.y = element_text(color="black",
size=11)) +
theme(legend.title =element_text(colour="black", size=10)) +
scale_color_brewer(palette="Dark2",  labels = c("Q175", "Wild Type"))
# LIBRARIES
library(dplyr)
library(ggplot2)
library(readxl)
library(lme4)
library(lmtest)
library(performance)
library(lmerTest)
library(optimx)
library(RColorBrewer)
# LIBRARIES
library(dplyr)
library(ggplot2)
library(readxl)
library(lme4)
library(lmtest)
library(performance)
library(lmerTest)
library(optimx)
library(RColorBrewer)
# DATA
data_daily_avg_ht <- read_excel("data/data_daily_avg_ht.xlsx", sheet = "long")
# MULTI-LEVEL MODEL OF DAILY AVERAGE HOLD TIME
# Step 1: random-intercept-only/null model
null_model_id <- lmer(daily_avg ~ 1 + (1|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_id)
performance::icc(null_model_id)
#Step 1a: test if the model is cross-classified by day
null_model_day <- lmer(daily_avg ~ 1 + (1|day), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_day)
performance::icc(null_model_day)
#Step 1b: test ICC of mouse genotype
null_model_type <- lmer(daily_avg ~ 1 + (1|type), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_type)
performance::icc(null_model_type)
#Step 1c: test ICC of cage number
null_model_cage <- lmer(daily_avg ~ 1 + (1|cage), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_cage)
performance::icc(null_model_cage)
#Step 1c: test ICC of number of mice per cage
null_model_density <- lmer(daily_avg ~ 1 + (1|cage_density), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(null_model_density)
performance::icc(null_model_density)
# Step 2: build model
# 2a: Adding Level1 fixed and random effects
# Level 1 predictor: day
l1_model <- lmer(daily_avg ~ 1 + day + (day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l1_model)
as.matrix(Matrix::bdiag(VarCorr(l1_model)))
# 2b: Evidence for retaining effects
l1_model_no_U1j <-  lmer(daily_avg ~ 1 + day + (1|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
anova(l1_model, l1_model_no_U1j)
confint(l1_model, oldNames = F)
l1_model_cov0 <- lmer(daily_avg ~ 1 + day + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
anova(l1_model, l1_model_cov0)
confint(l1_model_cov0, oldNames = F)
as_tibble(coef(l1_model)$mouse_id) %>%
ggplot(mapping = aes(x = day)) +
geom_histogram(bins = 5)
# 2c: Adding Level-2 fixed effects
l2_type <- lmer(daily_avg ~ 1 + day + type + day:type + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type)
anova(l2_type,l1_model_cov0)
# 2d: Adding Level-3 fixed effects
l2_type_cage <- lmer(daily_avg ~ 1 + day + type + day:type + cage + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage)
confint(l2_type_cage, oldNames = F)
anova(l2_type_cage1,l2_type)
data_daily_avg_ht %>%
group_by(day, type) %>% # group by timepoint and mouse type
mutate(daht_mean = mean(daily_avg)) %>%
ggplot(mapping = aes(x = day, y = daht_mean, colour = factor(type))) +
geom_line() +
labs(title = "DAHT Over Time, Wild Type vs. Q175",
colour = "Mouse Genotype") +
xlab("Time (days)") +
ylab("Daily Average Hold Time (s)") +
ylim(0,1) +
theme_classic() +
theme(panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA)) +
theme(axis.text.x = element_text(color="black",
size=11),
axis.text.y = element_text(color="black",
size=11)) +
theme(legend.title =element_text(colour="black", size=10)) +
scale_color_brewer(palette="Dark2",  labels = c("Q175", "Wild Type"))
data_daily_avg_ht %>%
group_by(day) %>%
mutate(daht_mean = mean(daily_avg)) %>% # mean DAHT per timepoint
ggplot(mapping = aes(x = day, y = daht_mean)) +
geom_line() +
labs(title = "DAHT Over Time for Entire Sample") +
xlab("Time (days)") +
ylab("Daily Average Hold Time (s)") +
ylim(0,1) +
theme_classic() +
theme(axis.text.x = element_text(color="black",
size=11),
axis.text.y = element_text(color="black",
size=11))
data_daily_avg_ht %>%
group_by(day, cage) %>% # group by timepoint and cage
mutate(daht_mean = mean(daily_avg)) %>%
ggplot(mapping = aes(x = day, y = daht_mean, colour = factor(cage))) +
geom_line() +
labs(title = "DAHT Over Time, Cage", colour = "Cage") +
xlab("Time (days)") +
ylab("Daily Average Hold Time (s)") +
ylim(0,1) +
theme_classic() +
theme(axis.text.x = element_text(color="black",
size=11),
axis.text.y = element_text(color="black",
size=11)) +
theme(legend.title =element_text(colour="black", size=10)) +
scale_color_brewer(palette="Dark2",  labels = c("1", "2", "3",
"4", "5", "6",
"7", "8", "9"))
data_daily_avg_ht %>%
group_by(day, cage_density) %>% # group by timepoint and cage density
mutate(daht_mean = mean(daily_avg)) %>%
ggplot(mapping = aes(x = day, y = daht_mean, colour = factor(cage_density))) +
geom_line() +
labs(title = "DAHT Over Time, 2 or 3 Mice Per Cage",
colour = "Number of Mice Per Cage") +
xlab("Time (days)") +
ylab("Daily Average Hold Time (s)") +
ylim(0,1) +
theme_classic() +
theme(axis.text.x = element_text(color="black",
size=11),
axis.text.y = element_text(color="black",
size=11)) +
theme(legend.title =element_text(colour="black", size=10)) +
scale_color_brewer(palette="Dark2",  labels = c("2", "3"))
data_daily_avg_ht %>%
ggplot(mapping = aes(x = day, y = daily_avg)) +
geom_point(alpha = .2)
data_daily_avg_ht %>%
group_by(type) %>%
ggplot(mapping = aes(x = day, y = daily_avg, colour = factor(cage_density))) +
geom_point(show.legend = FALSE) +
geom_smooth(method = lm, se = FALSE, show.legend = TRUE, fullrange = TRUE)
data_daily_avg_ht %>%
group_by(day, cage_density) %>% # group by timepoint and cage density
mutate(daht_mean = mean(daily_avg)) %>%
ggplot(mapping = aes(x = day, y = daht_mean, colour = factor(cage_density))) +
geom_line() +
labs(title = "DAHT Over Time, 2 or 3 Mice Per Cage",
colour = "Number of Mice Per Cage") +
xlab("Time (days)") +
ylab("Daily Average Hold Time (s)") +
ylim(0,1) +
theme_classic() +
theme(axis.text.x = element_text(color="black",
size=11),
axis.text.y = element_text(color="black",
size=11)) +
theme(legend.title =element_text(colour="black", size=10)) +
scale_color_brewer(palette="Dark2",  labels = c("2", "3"))
# LIBRARIES
library(dplyr)
library(ggplot2)
library(readxl)
library(lme4)
library(lmtest)
library(performance)
library(lmerTest)
library(optimx)
library(RColorBrewer)
data_daily_avg_ht %>%
group_by(day, cage) %>% # group by timepoint and cage
mutate(daht_mean = mean(daily_avg)) %>%
ggplot(mapping = aes(x = day, y = daht_mean, colour = factor(cage))) +
geom_line() +
labs(title = "DAHT Over Time, Cage", colour = "Cage") +
xlab("Time (days)") +
ylab("Daily Average Hold Time (s)") +
ylim(0,1) +
theme_classic() +
theme(axis.text.x = element_text(color="black",
size=11),
axis.text.y = element_text(color="black",
size=11)) +
theme(legend.title =element_text(colour="black", size=10)) +
scale_color_brewer(palette="Dark2",  labels = c("1", "2", "3",
"4", "5", "6",
"7", "8", "9"))
data_daily_avg_ht %>%
group_by(day, cage_density) %>% # group by timepoint and cage density
mutate(daht_mean = mean(daily_avg)) %>%
ggplot(mapping = aes(x = day, y = daht_mean, colour = factor(cage_density))) +
geom_line() +
labs(title = "DAHT Over Time, 2 or 3 Mice Per Cage",
colour = "Number of Mice Per Cage") +
xlab("Time (days)") +
ylab("Daily Average Hold Time (s)") +
ylim(0,1) +
theme_classic() +
theme(axis.text.x = element_text(color="black",
size=11),
axis.text.y = element_text(color="black",
size=11)) +
theme(legend.title =element_text(colour="black", size=10)) +
scale_color_brewer(palette="Dark2",  labels = c("2", "3"))
# 2d: Adding Level-3 fixed effects
l2_type_cage <- lmer(daily_avg ~ 1 + day + type + day:type + cage + (1|mouse_id) + (0 + day|mouse_id), data = data_daily_avg_ht, REML = F,
control = lmerControl(optimizer = "Nelder_Mead"))
summary(l2_type_cage)
